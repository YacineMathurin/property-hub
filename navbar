import React, { useState } from 'react';
import { Menu, X, User, LogIn, LogOut } from 'lucide-react';

export default function NavBar() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  
  const navLinks = [
    { href: "/", label: "Home" },
    { href: "/ajouter-certificat", label: "Authentifier" },
    { href: "/check-it", label: "Verifier" },
    { href: "/favorites", label: "Favorites" },
    { href: "/blog", label: "Blog" },
    { href: "/partners", label: "Partners" },
    { href: "/about", label: "About" },
    { href: "/contact", label: "Contact" },
  ];

  return (
    <nav className="bg-white shadow-lg w-full">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex h-16">
          {/* Mobile Menu Button - Moved to left */}
          <div className="md:hidden flex items-center">
            <button
              onClick={() => setIsMenuOpen(!isMenuOpen)}
              className="p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 transition-colors duration-200"
              aria-label="Toggle menu"
            >
              {isMenuOpen ? (
                <X className="h-6 w-6" />
              ) : (
                <Menu className="h-6 w-6" />
              )}
            </button>
          </div>

          {/* Logo */}
          <div className="flex-shrink-0 flex items-center mx-4">
            <span className="text-xl font-bold">PropertyHub</span>
          </div>

          {/* Desktop Menu */}
          <div className="hidden md:flex items-center space-x-4">
            {navLinks.map(({ href, label }) => (
              <button
                key={href}
                className="px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50"
              >
                {label}
              </button>
            ))}
          </div>

          {/* User Menu - Desktop & Mobile - Pushed to right */}
          <div className="flex items-center space-x-4 ml-auto">
            {isLoggedIn ? (
              <div className="flex items-center space-x-4">
                <button className="p-2 rounded-full hover:bg-gray-100">
                  <User className="h-6 w-6 text-gray-600" />
                </button>
                <button
                  onClick={() => setIsLoggedIn(false)}
                  className="flex items-center px-4 py-2 text-sm font-medium bg-gray-100 text-gray-700 rounded-full hover:bg-gray-200 transition-all duration-200"
                >
                  <LogOut className="h-5 w-5 mr-2" />
                  <span>Logout</span>
                </button>
              </div>
            ) : (
              <button
                onClick={() => setIsLoggedIn(true)}
                className="flex items-center px-4 py-2 text-sm font-medium bg-blue-600 text-white rounded-full hover:bg-blue-700 transition-all duration-200 shadow-sm hover:shadow-md"
              >
                <LogIn className="h-5 w-5 mr-2" />
                <span>Login</span>
              </button>
            )}
          </div>
        </div>
      </div>

      {/* Mobile Menu with animation */}
      <div 
        className={`md:hidden overflow-hidden transition-all duration-300 ease-in-out ${
          isMenuOpen ? "max-h-96 opacity-100" : "max-h-0 opacity-0"
        }`}
      >
        <div className="px-2 py-3 space-y-1 transform transition-transform duration-300 ease-in-out">
          {navLinks.map(({ href, label }) => (
            <button
              key={href}
              className="block w-full text-left px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-colors duration-200"
              onClick={() => setIsMenuOpen(false)}
            >
              {label}
            </button>
          ))}
          {isLoggedIn && (
            <button
              className="block w-full text-left px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-blue-600 hover:bg-blue-50 transition-colors duration-200"
              onClick={() => setIsMenuOpen(false)}
            >
              Profile
            </button>
          )}
        </div>
      </div>
    </nav>
  );
}
